{"version":3,"sources":["components/Digits.js","components/Title.js","components/Hangman.js","App.js","registerServiceWorker.js","index.js"],"names":["letters","toUpperCase","split","Digits","_ref","onClick","lettersMiss","lettersFind","react_default","a","createElement","className","map","letter","index","key","includes","Title","content","gameOver","word","concat","Hangman","length","SENTENCE","SENTENCE_NO_SPACES","join","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDigitClick","_this$state","state","isInSentence","setState","toConsumableArray","gameStart","won","limitToWin","removeDuplicateCharacters","limitToLose","prevProps","prevState","string","filter","item","pos","self","indexOf","components_Hangman","components_Title","components_Digits","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.442f61da.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./digits.scss\";\n\nconst letters = \"abcdefghijklmnopqrstuvwxyz\".toUpperCase().split(\"\");\n\nconst Digits = ({ onClick, lettersMiss, lettersFind }) => (\n  <section className=\"digits-list\">\n    <ul>\n      {letters.map((letter, index) => (\n        <li\n          key={index}\n          onClick={() => onClick(letter)}\n          className={\n            lettersMiss.includes(letter) || lettersFind.includes(letter)\n              ? \"done\"\n              : \"\"\n          }\n        >\n          <span>{letter}</span>\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n\nexport default Digits;\n","import React from \"react\";\nimport \"./title.scss\";\n\nconst Title = ({ content, lettersFind, gameOver }) => {\n  const sentence = content.split(/[ ,]+/);\n  const words = sentence.map(word => word.split(\"\"));\n  const letters = words.map((word, index) => (\n    <ul className={`word ${gameOver ? \"over\" : \"\"}`} key={index}>\n      {word.map((letter, index) => (\n        <li\n          key={index}\n          className={lettersFind.includes(letter) ? \"finded\" : \"\"}\n        >\n          <span>{letter}</span>\n        </li>\n      ))}\n    </ul>\n  ));\n  return <section className=\"sentence\">{letters}</section>;\n};\n\nexport default Title;\n","import React from \"react\";\nimport \"./hangman.scss\";\n\nconst Hangman = ({ lettersMiss }) => {\n  return (\n    <section className=\"hanglan-draw\">\n      Essais restants : {6 - lettersMiss.length}\n    </section>\n  );\n};\n\nexport default Hangman;\n","import React, { Component } from \"react\";\nimport Digits from \"./components/Digits\";\nimport Title from \"./components/Title\";\nimport Hangman from \"./components/Hangman\";\n\nconst SENTENCE = \"Je suis romain\".toUpperCase();\nconst SENTENCE_NO_SPACES = SENTENCE.split(\" \").join(\"\");\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      lettersMiss: [],\n      lettersFind: [],\n      gameStart: true,\n      gameOver: false,\n      won: false,\n      limitToWin: this.removeDuplicateCharacters(SENTENCE_NO_SPACES).length,\n      limitToLose: 6\n    };\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.state.lettersMiss !== prevState.lettersMiss ||\n      this.state.lettersFind !== prevState.lettersFind\n    ) {\n      if (this.state.lettersMiss.length === this.state.limitToLose) {\n        this.setState({ gameOver: true, won: false });\n        return;\n      }\n\n      if (this.state.lettersFind.length === this.state.limitToWin) {\n        this.setState({ gameOver: true, won: true });\n        return;\n      }\n    }\n  }\n\n  removeDuplicateCharacters(string) {\n    return string\n      .split(\"\")\n      .filter(function(item, pos, self) {\n        return self.indexOf(item) === pos;\n      })\n      .join(\"\");\n  }\n\n  handleDigitClick = letter => {\n    const { lettersMiss, lettersFind } = this.state;\n\n    if (lettersMiss.includes(letter) || lettersFind.includes(letter)) {\n      return;\n    }\n\n    if (this.isInSentence(letter)) {\n      this.setState({ lettersFind: [...lettersFind, ...letter] });\n      return;\n    }\n\n    this.setState({ lettersMiss: [...lettersMiss, ...letter] });\n  };\n\n  isInSentence(letter) {\n    return SENTENCE.includes(letter);\n  }\n\n  render() {\n    return (\n      <div className=\"Hangman\">\n        <h1>Jeux du Pendu</h1>\n        <h2>Développé par Romain Ollier</h2>\n        <hr />\n        <Hangman lettersMiss={this.state.lettersMiss} />\n        <Title\n          content={SENTENCE}\n          lettersFind={this.state.lettersFind}\n          gameOver={this.state.gameOver}\n        />\n        {this.state.gameOver ? (\n          <h3>{this.state.won ? \"Vous avez gagné\" : \"Vous avez perdu\"}</h3>\n        ) : (\n          <Digits\n            onClick={this.handleDigitClick}\n            lettersMiss={this.state.lettersMiss}\n            lettersFind={this.state.lettersFind}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nregisterServiceWorker();\n"],"sourceRoot":""}